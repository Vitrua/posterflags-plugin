#nullable enable
// <auto-generated/>
//------------------------------------------------------------------------------
// PosterFlagsPlugin.cs
// Copyright (c) YourCompany. All rights reserved.
// Licensed under the MIT License. See LICENSE file in the project root for full license information.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Globalization;
using Jellyfin.Plugin.PosterFlags.Configuration;
using MediaBrowser.Common.Configuration;
using MediaBrowser.Common.Plugins;
using MediaBrowser.Model.Plugins;
using MediaBrowser.Model.Serialization;

namespace Jellyfin.Plugin.PosterFlags
{
    /// <summary>
    /// The main plugin class.
    /// </summary>
    public class PosterFlagsPlugin : BasePlugin<PluginConfiguration>, IHasWebPages
    {
        /// <summary>
        /// Gets the current plugin instance.
        /// </summary>
        public static PosterFlagsPlugin? Instance { get; private set; }

        /// <summary>
        /// Initializes a new instance of the <see cref="PosterFlagsPlugin"/> class.
        /// </summary>
        /// <param name="applicationPaths">Instance of the <see cref="IApplicationPaths"/> interface.</param>
        /// <param name="xmlSerializer">Instance of the <see cref="IXmlSerializer"/> interface.</param>
        public PosterFlagsPlugin(IApplicationPaths applicationPaths, IXmlSerializer xmlSerializer)
            : base(applicationPaths, xmlSerializer)
        {
            Instance = this;
        }

        /// <inheritdoc />
        public override string Name => "PosterFlags";

        /// <inheritdoc />
        public override Guid Id => Guid.Parse("4e0813b6-0ff3-494c-bafa-1d5a602834ba");

        /// <inheritdoc />
        public IEnumerable<PluginPageInfo> GetPages()
        {
            return new List<PluginPageInfo>
            {
                new PluginPageInfo
                {
                    Name = this.Name,
                    EmbeddedResourcePath = string.Format(
                        CultureInfo.InvariantCulture,
                        "{0}.Configuration.configPage.html",
                        this.GetType().Namespace)
                }
            };
        }
    }
}
